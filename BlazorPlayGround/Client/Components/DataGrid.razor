@typeparam T

@if (Data != null && DisplayColumns.Count > 0)
{
    <table class="table">
        <thead>
            <tr>
                @foreach (var column in DisplayColumns)
                {
                    <th>@column.Title</th>
                }
                @if(HasEvent)
                {
                    <th>@EventColumnName</th>
                }

            </tr>
        </thead>
        <tbody>
            @foreach (var item in Data)
            {
                <tr>
                    @foreach (var column in DisplayColumns)
                    {
                        var propValue = column.Property.GetValue(item);
                        <td>@propValue</td>
                    }
                    @if (HasEvent)
                    {
                        <td>
                            <button class="btn btn-primary" @onclick="() => OnClickHandler(item)">@EventBtnName</button>
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
}
else if (Data !=null)
{
        <table class="table table-striped">
            <thead>
                <tr>
                    @foreach (var prop in typeof(T).GetProperties())
                    {
                        <th>@prop.Name</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Data)
                {
                    <tr>
                        @foreach (var prop in typeof(T).GetProperties())
                        {
                            <td>@prop.GetValue(item)</td>
                        }
                    </tr>
                }
            </tbody>
        </table>
}
else
{
    <h3>No Data</h3>
}

@code {
    [Parameter]
    public bool HasEvent { get; set; }
    [Parameter]
    public string EventColumnName { get; set; } = string.Empty;
    [Parameter]
    public string EventBtnName { get; set; } = string.Empty;
    [Parameter]
    public EventCallback<T> OnClick { get; set; }
    [Parameter]
    public IEnumerable<T>? Data { get; set; }

    [Parameter]
    public List<GridColumn<T>> DisplayColumns { get; set; } = new List<GridColumn<T>>();
    void OnClickHandler(T item)
    {
        OnClick.InvokeAsync(item);
    }

}


